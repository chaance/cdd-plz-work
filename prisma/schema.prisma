datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id        String    @id @default(cuid())
    email     String    @unique
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    password  Password?
    notes     Note[]
    posts     Post[]
}

model Password {
    hash   String
    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    userId String @unique
}

model Note {
    id    String @id @default(cuid())
    title String
    body  String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    userId String
}

enum PostTypes {
    BLOG
}

model PostType {
    id    PostTypes @id
    posts Post[]
}

model Post {
    id              String    @id @default(cuid())
    slug            String    @unique
    contentMarkdown String
    contentHtml     String
    createdAt       DateTime  @default(now())
    updatedAt       DateTime? @updatedAt
    postTypeId      PostTypes
    postType        PostType  @relation(fields: [postTypeId], references: [id])

    // frontmatter attributes
    title       String              @unique
    image       String?
    imageAlt    String?
    description String?
    excerpt     String?
    creatorId   String
    creator     User                @relation(fields: [creatorId], references: [id])
    categories  CategoriesOnPosts[]
}

model Category {
    id    String              @id @default(cuid())
    slug  String              @unique
    name  String              @unique
    posts CategoriesOnPosts[]
}

model CategoriesOnPosts {
    post       Post     @relation(fields: [postId], references: [id])
    postId     String
    category   Category @relation(fields: [categoryId], references: [id])
    categoryId String
    assignedAt DateTime @default(now())

    @@id([postId, categoryId])
}
